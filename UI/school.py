# Form implementation generated from reading ui file 'school.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(865, 696)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setStyleSheet("/* Общее оформление окна */\n"
"QMainWindow {\n"
"    background: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, \n"
"                                stop:0 #d4e4ff, stop:1 #ffffff); /* Яркий градиент */\n"
"    border: none;\n"
"}\n"
"\n"
"/* Заголовки, такие как QLabel для разделов */\n"
"QLabel {\n"
"    font-size: 16px;\n"
"    font-weight: bold;\n"
"    color: #4a4a4a; /* Тёмно-серый текст */\n"
"    padding: 5px;\n"
"}\n"
"\n"
"/* Поля ввода */\n"
"QLineEdit {\n"
"    background-color: #ffffff; /* Белый фон */\n"
"    border: 2px solid #c4c4c4; /* Серые границы */\n"
"    border-radius: 5px;\n"
"    padding: 5px;\n"
"    font-size: 14px;\n"
"}\n"
"\n"
"QLineEdit:focus {\n"
"    border-color: #98AFE1; /* Цвет акцента при фокусе */\n"
"}\n"
"\n"
"/* Кнопки */\n"
"QPushButton {\n"
"    background-color: #98AFE1; /* Цвет кнопок */\n"
"    color: white;             /* Белый текст */\n"
"    border: 2px solid #5c6e96; /* Цвет границы */\n"
"    border-radius: 8px;\n"
"    font-size: 14px;\n"
"    padding: 8px 12px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #5c6e96; /* Цвет кнопки при наведении */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #4b587a; /* Цвет кнопки при нажатии */\n"
"}\n"
"\n"
"/* Текстовые поля и списки */\n"
"QTextEdit, QPlainTextEdit {\n"
"    background-color: #ffffff; /* Белый фон */\n"
"    border: 2px solid #c4c4c4; /* Границы */\n"
"    border-radius: 5px;\n"
"    padding: 10px;\n"
"    font-size: 14px;\n"
"    color: #333333;\n"
"}\n"
"\n"
"QTextEdit:focus, QPlainTextEdit:focus {\n"
"    border-color: #98AFE1; /* Акцент при фокусе */\n"
"}\n"
"\n"
"/* Таблицы */\n"
"QTableWidget {\n"
"    background-color: #ffffff;\n"
"    border: 1px solid #c4c4c4;\n"
"    gridline-color: #e0e0e0;\n"
"    font-size: 14px;\n"
"    color: #333333;\n"
"}\n"
"\n"
"QHeaderView::section {\n"
"    background-color: #98AFE1; /* Заголовки таблиц */\n"
"    color: white;\n"
"    font-weight: bold;\n"
"    padding: 5px;\n"
"    border: none;\n"
"}\n"
"\n"
"/* Вкладки */\n"
"/* Оформление панели вкладок */\n"
"QTabWidget::pane {\n"
"    border: 2px solid #7289bb; /* Граница панели вкладок */\n"
"    border-radius: 8px;\n"
"    background-color: #ffffff; /* Белый фон панели */\n"
"}\n"
"\n"
"/* Общий стиль вкладок */\n"
"QTabBar::tab {\n"
"    background-color: #f5f5f5; /* Светлый фон вкладок */\n"
"    border: 2px solid #dddddd; /* Граница вкладок */\n"
"    border-radius: 8px;        /* Скруглённые углы */\n"
"    padding: 10px 20px;        /* Внутренние отступы */\n"
"    margin: 2px;               /* Расстояние между вкладками */\n"
"    font-size: 14px;           /* Размер текста вкладок */\n"
"    color: #333333;            /* Цвет текста вкладок */\n"
"    transition: all 0.2s ease; /* Анимация для плавного перехода */\n"
"}\n"
"\n"
"/* Стиль выбранной вкладки */\n"
"QTabBar::tab:selected {\n"
"    background-color: #98AFE1; /* Акцентный цвет для активной вкладки */\n"
"    border: 2px solid #4b587a; /* Граница для активной вкладки */\n"
"    color: white;              /* Белый текст для активной вкладки */\n"
"    font-weight: bold;         /* Жирный текст */\n"
"    margin-bottom: 2px;       /* Соединение вкладки с панелью */\n"
"}\n"
"\n"
"/* Стиль вкладок при наведении */\n"
"QTabBar::tab:!selected:hover {\n"
"    background-color: #98AFE1; /* Светло-серый фон при наведении */\n"
"    border: 2px solid #98AFE1; /* Изменение цвета границы при наведении */\n"
"    color: #000000;            /* Чёрный текст */\n"
"}\n"
"\n"
"/* Неактивные вкладки */\n"
"QTabBar::tab:!selected {\n"
"    background-color: #D0D8FB; /* Стильный пастельный голубой фон */\n"
"    border: 2px solid  #ffffff; /* Светло-серая граница */\n"
"    color: #333333;            /* Тёмный текст для неактивных вкладок */\n"
"}\n"
"\n"
"/* Задать фиксированную ширину вкладок */\n"
"QTabBar::tab {\n"
"    width: 150px; /* Фиксированная ширина */\n"
"    height: 40px; /* Фиксированная высота */\n"
"}\n"
"\n"
"\n"
"/* Выпадающие списки */\n"
"QComboBox {\n"
"    background-color: #ffffff;\n"
"    border: 2px solid #c4c4c4;\n"
"    border-radius: 5px;\n"
"    padding: 5px;\n"
"    font-size: 14px;\n"
"}\n"
"\n"
"QComboBox:focus {\n"
"    border-color: #98AFE1;\n"
"}\n"
"\n"
"QComboBox::drop-down {\n"
"    background: #98AFE1;\n"
"    border-left: 1px solid #c4c4c4; /* Разделительная линия между текстом и стрелкой */\n"
"    width: 20px;\n"
"}\n"
"\n"
"QComboBox::down-arrow {\n"
"    image: url(icons/arrow_down.png); /* Укажите свой путь к иконке */\n"
"    width: 14px;\n"
"    height: 14px;\n"
"}\n"
"\n"
"QComboBox::down-arrow:pressed {\n"
"    position: relative;\n"
"    top: 1px; /* Эффект нажатия */\n"
"}\n"
"\n"
"\n"
"/* Прогресс-бар */\n"
"QProgressBar {\n"
"    border: 2px solid #c4c4c4;\n"
"    border-radius: 5px;\n"
"    background-color: #ffffff;\n"
"    text-align: center;\n"
"    font-size: 14px;\n"
"    color: #4a4a4a;\n"
"}\n"
"\n"
"QProgressBar::chunk {\n"
"    background-color: #7289bb; /* Акцентный цвет заполнения */\n"
"    width: 20px;\n"
"}\n"
"\n"
"")
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.tabWidget = QtWidgets.QTabWidget(parent=self.centralwidget)
        self.tabWidget.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.tabWidget.setStyleSheet("QTabBar::tab {\n"
"        height: 70px;  /* Укажите подходящую высоту вкладок */\n"
"        width: 200px;   /* Укажите подходящую ширину вкладок */\n"
"        writing-mode: horizontal-tb;  /* Указывает горизонтальное направление текста */\n"
"    }\n"
"\n"
"QTabBar::tab:last {\n"
"    margin-top: 70px; /* Увеличенный отступ для последней вкладки */\n"
"}\n"
"\n"
"QTabBar::tab:last {\n"
"    margin-left: 65px;\n"
"    border-radius: 45px;    /* Скругление углов */\n"
"    padding: 10px;         /* Внутренний отступ */\n"
"    height: 70px;  /* Укажите подходящую высоту вкладок */\n"
"    width: 70px;   /* Укажите подходящую ширину вкладок */\n"
"}")
        self.tabWidget.setTabPosition(QtWidgets.QTabWidget.TabPosition.West)
        self.tabWidget.setTabShape(QtWidgets.QTabWidget.TabShape.Rounded)
        self.tabWidget.setIconSize(QtCore.QSize(70, 200))
        self.tabWidget.setMovable(True)
        self.tabWidget.setObjectName("tabWidget")
        self.tab_teacher = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tab_teacher.sizePolicy().hasHeightForWidth())
        self.tab_teacher.setSizePolicy(sizePolicy)
        self.tab_teacher.setObjectName("tab_teacher")
        self.teacher_label_icon = QtWidgets.QLabel(parent=self.tab_teacher)
        self.teacher_label_icon.setGeometry(QtCore.QRect(10, 20, 141, 131))
        self.teacher_label_icon.setStyleSheet("QLabel {\n"
"        background-image: url(\'icons/classroom.png\');\n"
"        background-repeat: no-repeat;\n"
"        background-position: center;\n"
"        border: 3px solid #c4c4c4; /* Опционально: рамка */\n"
"        border-radius: 10px; /* Опционально: скругленные углы */\n"
"    }")
        self.teacher_label_icon.setText("")
        self.teacher_label_icon.setObjectName("teacher_label_icon")
        self.teacher_progressBar = QtWidgets.QProgressBar(parent=self.tab_teacher)
        self.teacher_progressBar.setGeometry(QtCore.QRect(60, 370, 201, 25))
        self.teacher_progressBar.setProperty("value", 24)
        self.teacher_progressBar.setObjectName("teacher_progressBar")
        self.teacher_table = QtWidgets.QTableWidget(parent=self.tab_teacher)
        self.teacher_table.setGeometry(QtCore.QRect(0, 180, 591, 131))
        self.teacher_table.setStyleSheet("QTableWidget {\n"
"    border: off;\n"
"}")
        self.teacher_table.setObjectName("teacher_table")
        self.teacher_table.setColumnCount(5)
        self.teacher_table.setRowCount(3)
        item = QtWidgets.QTableWidgetItem()
        self.teacher_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.teacher_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.teacher_table.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.teacher_table.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.teacher_table.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.teacher_table.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.teacher_table.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.teacher_table.setItem(0, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.teacher_table.setItem(0, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.teacher_table.setItem(0, 4, item)
        item = QtWidgets.QTableWidgetItem()
        self.teacher_table.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.teacher_table.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.teacher_table.setItem(1, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.teacher_table.setItem(1, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.teacher_table.setItem(1, 4, item)
        item = QtWidgets.QTableWidgetItem()
        self.teacher_table.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.teacher_table.setItem(2, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.teacher_table.setItem(2, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.teacher_table.setItem(2, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.teacher_table.setItem(2, 4, item)
        self.teacher_calendar = QtWidgets.QCalendarWidget(parent=self.tab_teacher)
        self.teacher_calendar.setGeometry(QtCore.QRect(0, 440, 256, 211))
        self.teacher_calendar.setStyleSheet("/* Основной стиль календаря */\n"
"QCalendarWidget {\n"
"background-color: #ffffff; /* Белый фон */\n"
"border: 2px solid #c4c4c4; /* Серые границы */\n"
"border-radius: 20px; /* Скруглённые углы */\n"
"font-size: 14px; /* Размер шрифта */\n"
"color: #333333; /* Цвет текста */\n"
"}\n"
"\n"
"QCalendarWidget QWidget {\n"
"    background-color: #d9e6f2; /* Новый цвет фона */\n"
"    border: none;             /* Убираем рамку */\n"
"}\n"
"\n"
"/* Заголовки месяцев и кнопки навигации */\n"
"QCalendarWidget QToolButton {\n"
"background-color: #98AFE1; /* Фон кнопок (месяц, навигация) */\n"
"color: white; /* Белый текст */\n"
"border: 1px solid #7289bb; /* Граница кнопок */\n"
"border-radius: 4px; /* Скруглённые углы */\n"
"font-weight: bold; /* Жирный шрифт */\n"
"padding: 5px;\n"
"}\n"
"\n"
"QCalendarWidget QToolButton:hover {\n"
"background-color: #5c6e96; /* Цвет кнопки при наведении */\n"
"}\n"
"\n"
"QCalendarWidget QToolButton:pressed {\n"
"background-color: #4b587a; /* Цвет кнопки при нажатии */\n"
"}\n"
"\n"
"\n"
"/* Ячейки с днями месяца */\n"
"QCalendarWidget QAbstractItemView:item {\n"
"border: 1px dashed #7289bb ; /* Без границ по умолчанию */\n"
"\n"
"}\n"
"\n"
"/* Текущая дата */\n"
"QCalendarWidget QAbstractItemView:item:selected {\n"
"background-color: #7289bb; /* Цвет выделения текущей даты */\n"
"color: white; /* Белый текст */\n"
"font-weight: bold;\n"
"}\n"
"\n"
"\n"
"/* Даты из других месяцев */\n"
"QCalendarWidget QAbstractItemView:item:!enabled {\n"
"background-color: #f5f5f5; /* Светлый фон для дат из других месяцев */\n"
"color: #b0b0b0; /* Серый текст */\n"
"}\n"
"\n"
"/* Убираем прозрачность */\n"
"QCalendarWidget QAbstractItemView {\n"
"background: transparent;\n"
"}\n"
"\n"
"\n"
"/* Даты из других месяцев */\n"
"QCalendarWidget QAbstractItemView:item:!enabled {\n"
"    background-color: #f0f0f0; /* Светло-серый фон */\n"
"    color: #a0a0a0;            /* Бледно-серый текст */\n"
"    font-style: italic;        /* Курсив для визуального выделения */\n"
"}\n"
"\n"
"/* Субботы */\n"
"QCalendarWidget QAbstractItemView:item:enabled:nth-of-type(6) {\n"
"    background-color: #FFF4E0; /* Пастельно-оранжевый фон */\n"
"    color: #CC6600;            /* Оранжевый текст */\n"
"    font-weight: bold;         /* Жирный шрифт */\n"
"}\n"
"\n"
"/* Воскресенья */\n"
"QCalendarWidget QAbstractItemView:item:enabled:nth-of-type(7) {\n"
"    background-color: #FFE6E6; /* Пастельно-красный фон */\n"
"    color: #CC0000;            /* Красный текст */\n"
"    font-weight: bold;         /* Жирный шрифт */\n"
"}\n"
"\n"
"\n"
"")
        self.teacher_calendar.setObjectName("teacher_calendar")
        self.teacher_textEdit = QtWidgets.QTextEdit(parent=self.tab_teacher)
        self.teacher_textEdit.setGeometry(QtCore.QRect(260, 450, 331, 201))
        self.teacher_textEdit.setObjectName("teacher_textEdit")
        self.teacher_label_notes = QtWidgets.QLabel(parent=self.tab_teacher)
        self.teacher_label_notes.setGeometry(QtCore.QRect(380, 419, 121, 31))
        self.teacher_label_notes.setObjectName("teacher_label_notes")
        self.teacher_label_percent = QtWidgets.QLabel(parent=self.tab_teacher)
        self.teacher_label_percent.setGeometry(QtCore.QRect(0, 330, 321, 81))
        self.teacher_label_percent.setStyleSheet("QLabel {\n"
"    color: #333333; /* Цвет текста */\n"
"    font-size: 12px; /* Размер шрифта */\n"
"    font-weight: bold; /* Толщина шрифта */\n"
"    border: 2px solid #98AFE1; /* Рамка вокруг QLabel */\n"
"    border-radius: 10px; /* Скругление углов */\n"
"    background-color: #F0F0F0; /* Фоновый цвет */\n"
"    padding: 7px 1px 1px 0px; /* Верхний отступ больше для текста сверху */\n"
"}\n"
"\n"
"")
        self.teacher_label_percent.setTextFormat(QtCore.Qt.TextFormat.AutoText)
        self.teacher_label_percent.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading|QtCore.Qt.AlignmentFlag.AlignLeft|QtCore.Qt.AlignmentFlag.AlignTop)
        self.teacher_label_percent.setObjectName("teacher_label_percent")
        self.teacher_comboBox_classes = QtWidgets.QComboBox(parent=self.tab_teacher)
        self.teacher_comboBox_classes.setGeometry(QtCore.QRect(270, 340, 50, 28))
        self.teacher_comboBox_classes.setObjectName("teacher_comboBox_classes")
        self.teacher_comboBox_classes.addItem("")
        self.teacher_comboBox_classes.addItem("")
        self.teacher_comboBox_classes.addItem("")
        self.teacher_label_notification = QtWidgets.QLabel(parent=self.tab_teacher)
        self.teacher_label_notification.setGeometry(QtCore.QRect(330, 330, 261, 81))
        self.teacher_label_notification.setStyleSheet("QLabel {\n"
"    color: #333333; /* Цвет текста */\n"
"    font-size: 12px; /* Размер шрифта */\n"
"    font-weight: bold; /* Толщина шрифта */\n"
"    border: 2px solid #98AFE1; /* Рамка вокруг QLabel */\n"
"    border-radius: 10px; /* Скругление углов */\n"
"    background-color: #F0F0F0; /* Фоновый цвет */\n"
"    padding: 7px 1px 1px 0px; /* Верхний отступ больше для текста сверху */\n"
"}\n"
"\n"
"\n"
"")
        self.teacher_label_notification.setTextFormat(QtCore.Qt.TextFormat.AutoText)
        self.teacher_label_notification.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading|QtCore.Qt.AlignmentFlag.AlignLeft|QtCore.Qt.AlignmentFlag.AlignTop)
        self.teacher_label_notification.setObjectName("teacher_label_notification")
        self.teacher_label_name = QtWidgets.QLabel(parent=self.tab_teacher)
        self.teacher_label_name.setGeometry(QtCore.QRect(152, 14, 351, 41))
        self.teacher_label_name.setStyleSheet("QLabel {\n"
"    color: #5c6e96;\n"
"    font-size: 25px; /* Размер шрифта */\n"
"    font-weight: bold; /* Толщина шрифта */\n"
"}\n"
"")
        self.teacher_label_name.setObjectName("teacher_label_name")
        self.teacher_label_headertable = QtWidgets.QLabel(parent=self.tab_teacher)
        self.teacher_label_headertable.setGeometry(QtCore.QRect(150, 140, 204, 32))
        self.teacher_label_headertable.setObjectName("teacher_label_headertable")
        self.teacher_label_numgroups = QtWidgets.QLabel(parent=self.tab_teacher)
        self.teacher_label_numgroups.setGeometry(QtCore.QRect(152, 106, 100, 32))
        self.teacher_label_numgroups.setStyleSheet("QLabel {\n"
"    color: #333333; /* Цвет текста */\n"
"    font-size: 15px; /* Размер шрифта */\n"
"    font-weight: bold; /* Толщина шрифта */\n"
"    text-align: center; /* Выравнивание текста по центру */\n"
"    border: 2px solid #98AFE1; /* Рамка вокруг QLabel */\n"
"    border-radius: 10px; /* Скругление углов */\n"
"    background-color: #F0F0F0; /* Фоновый цвет */\n"
"    padding: 5px; /* Внутренние отступы */\n"
"}\n"
"\n"
"\n"
"\n"
"")
        self.teacher_label_numgroups.setObjectName("teacher_label_numgroups")
        self.teacher_label_numclasses = QtWidgets.QLabel(parent=self.tab_teacher)
        self.teacher_label_numclasses.setGeometry(QtCore.QRect(152, 65, 97, 34))
        self.teacher_label_numclasses.setStyleSheet("QLabel {\n"
"    color: #333333; /* Цвет текста */\n"
"    font-size: 15px; /* Размер шрифта */\n"
"    font-weight: bold; /* Толщина шрифта */\n"
"    text-align: center; /* Выравнивание текста по центру */\n"
"    border: 2px solid #98AFE1; /* Рамка вокруг QLabel */\n"
"    border-radius: 10px; /* Скругление углов */\n"
"    background-color: #F0F0F0; /* Фоновый цвет */\n"
"    padding: 5px; /* Внутренние отступы */\n"
"}\n"
"\n"
"\n"
"")
        self.teacher_label_numclasses.setObjectName("teacher_label_numclasses")
        self.teacher_label_name.raise_()
        self.teacher_label_headertable.raise_()
        self.teacher_label_numgroups.raise_()
        self.teacher_label_numclasses.raise_()
        self.teacher_label_icon.raise_()
        self.teacher_table.raise_()
        self.teacher_calendar.raise_()
        self.teacher_textEdit.raise_()
        self.teacher_label_notes.raise_()
        self.teacher_label_percent.raise_()
        self.teacher_label_notification.raise_()
        self.teacher_comboBox_classes.raise_()
        self.teacher_progressBar.raise_()
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icons/Страница учителя.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.tabWidget.addTab(self.tab_teacher, icon, "")
        self.tab_homework = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tab_homework.sizePolicy().hasHeightForWidth())
        self.tab_homework.setSizePolicy(sizePolicy)
        self.tab_homework.setObjectName("tab_homework")
        self.layoutWidget = QtWidgets.QWidget(parent=self.tab_homework)
        self.layoutWidget.setGeometry(QtCore.QRect(0, 20, 591, 37))
        self.layoutWidget.setObjectName("layoutWidget")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.layoutWidget)
        self.horizontalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.homework_label_filter = QtWidgets.QLabel(parent=self.layoutWidget)
        self.homework_label_filter.setObjectName("homework_label_filter")
        self.horizontalLayout_6.addWidget(self.homework_label_filter)
        self.homework_comboBox_filter = QtWidgets.QComboBox(parent=self.layoutWidget)
        self.homework_comboBox_filter.setMinimumSize(QtCore.QSize(70, 0))
        self.homework_comboBox_filter.setObjectName("homework_comboBox_filter")
        self.homework_comboBox_filter.addItem("")
        self.homework_comboBox_filter.setItemText(0, "")
        self.homework_comboBox_filter.addItem("")
        self.homework_comboBox_filter.addItem("")
        self.homework_comboBox_filter.addItem("")
        self.homework_comboBox_filter.addItem("")
        self.horizontalLayout_6.addWidget(self.homework_comboBox_filter)
        self.homework_label_input = QtWidgets.QLabel(parent=self.layoutWidget)
        self.homework_label_input.setObjectName("homework_label_input")
        self.horizontalLayout_6.addWidget(self.homework_label_input)
        self.homework_lineEdit_input = QtWidgets.QLineEdit(parent=self.layoutWidget)
        self.homework_lineEdit_input.setObjectName("homework_lineEdit_input")
        self.horizontalLayout_6.addWidget(self.homework_lineEdit_input)
        self.homework_table = QtWidgets.QTableWidget(parent=self.tab_homework)
        self.homework_table.setGeometry(QtCore.QRect(0, 60, 591, 531))
        self.homework_table.setObjectName("homework_table")
        self.homework_table.setColumnCount(7)
        self.homework_table.setRowCount(2)
        item = QtWidgets.QTableWidgetItem()
        self.homework_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.homework_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.homework_table.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.homework_table.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.homework_table.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.homework_table.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.homework_table.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.homework_table.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.homework_table.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.homework_table.setItem(0, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.homework_table.setItem(0, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.homework_table.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.homework_table.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.homework_table.setItem(1, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.homework_table.setItem(1, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.homework_table.setItem(1, 4, item)
        self.layoutWidget1 = QtWidgets.QWidget(parent=self.tab_homework)
        self.layoutWidget1.setGeometry(QtCore.QRect(0, 600, 591, 42))
        self.layoutWidget1.setObjectName("layoutWidget1")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.layoutWidget1)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.homework_pushButton_add = QtWidgets.QPushButton(parent=self.layoutWidget1)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.homework_pushButton_add.sizePolicy().hasHeightForWidth())
        self.homework_pushButton_add.setSizePolicy(sizePolicy)
        self.homework_pushButton_add.setMinimumSize(QtCore.QSize(0, 40))
        self.homework_pushButton_add.setObjectName("homework_pushButton_add")
        self.horizontalLayout_3.addWidget(self.homework_pushButton_add)
        self.homework_pushButton_update = QtWidgets.QPushButton(parent=self.layoutWidget1)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.homework_pushButton_update.sizePolicy().hasHeightForWidth())
        self.homework_pushButton_update.setSizePolicy(sizePolicy)
        self.homework_pushButton_update.setMinimumSize(QtCore.QSize(0, 40))
        self.homework_pushButton_update.setObjectName("homework_pushButton_update")
        self.horizontalLayout_3.addWidget(self.homework_pushButton_update)
        self.homework_pushButton_shadow = QtWidgets.QPushButton(parent=self.layoutWidget1)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.homework_pushButton_shadow.sizePolicy().hasHeightForWidth())
        self.homework_pushButton_shadow.setSizePolicy(sizePolicy)
        self.homework_pushButton_shadow.setMinimumSize(QtCore.QSize(0, 40))
        self.homework_pushButton_shadow.setObjectName("homework_pushButton_shadow")
        self.horizontalLayout_3.addWidget(self.homework_pushButton_shadow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("icons/Домашние задания.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.tabWidget.addTab(self.tab_homework, icon1, "")
        self.tab_classes = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tab_classes.sizePolicy().hasHeightForWidth())
        self.tab_classes.setSizePolicy(sizePolicy)
        self.tab_classes.setObjectName("tab_classes")
        self.layoutWidget_2 = QtWidgets.QWidget(parent=self.tab_classes)
        self.layoutWidget_2.setGeometry(QtCore.QRect(10, 20, 581, 37))
        self.layoutWidget_2.setObjectName("layoutWidget_2")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.layoutWidget_2)
        self.horizontalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.classes_label_filter = QtWidgets.QLabel(parent=self.layoutWidget_2)
        self.classes_label_filter.setObjectName("classes_label_filter")
        self.horizontalLayout_7.addWidget(self.classes_label_filter)
        self.classes_comboBox_filter = QtWidgets.QComboBox(parent=self.layoutWidget_2)
        self.classes_comboBox_filter.setMinimumSize(QtCore.QSize(70, 0))
        self.classes_comboBox_filter.setObjectName("classes_comboBox_filter")
        self.classes_comboBox_filter.addItem("")
        self.classes_comboBox_filter.setItemText(0, "")
        self.classes_comboBox_filter.addItem("")
        self.classes_comboBox_filter.addItem("")
        self.classes_comboBox_filter.addItem("")
        self.classes_comboBox_filter.addItem("")
        self.horizontalLayout_7.addWidget(self.classes_comboBox_filter)
        self.classes_label_input = QtWidgets.QLabel(parent=self.layoutWidget_2)
        self.classes_label_input.setObjectName("classes_label_input")
        self.horizontalLayout_7.addWidget(self.classes_label_input)
        self.classes_lineEdit_input = QtWidgets.QLineEdit(parent=self.layoutWidget_2)
        self.classes_lineEdit_input.setObjectName("classes_lineEdit_input")
        self.horizontalLayout_7.addWidget(self.classes_lineEdit_input)
        self.classes_table = QtWidgets.QTableWidget(parent=self.tab_classes)
        self.classes_table.setGeometry(QtCore.QRect(10, 61, 581, 531))
        self.classes_table.setSizeIncrement(QtCore.QSize(0, 0))
        self.classes_table.setBaseSize(QtCore.QSize(0, 0))
        self.classes_table.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.CursorShape.ArrowCursor))
        self.classes_table.setShowGrid(True)
        self.classes_table.setObjectName("classes_table")
        self.classes_table.setColumnCount(4)
        self.classes_table.setRowCount(3)
        item = QtWidgets.QTableWidgetItem()
        self.classes_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.classes_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.classes_table.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.classes_table.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.classes_table.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.classes_table.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.classes_table.setItem(0, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.classes_table.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.classes_table.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.classes_table.setItem(1, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.classes_table.setItem(2, 0, item)
        self.layoutWidget2 = QtWidgets.QWidget(parent=self.tab_classes)
        self.layoutWidget2.setGeometry(QtCore.QRect(10, 600, 571, 42))
        self.layoutWidget2.setObjectName("layoutWidget2")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.layoutWidget2)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.classes_pushButton_add = QtWidgets.QPushButton(parent=self.layoutWidget2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.classes_pushButton_add.sizePolicy().hasHeightForWidth())
        self.classes_pushButton_add.setSizePolicy(sizePolicy)
        self.classes_pushButton_add.setMinimumSize(QtCore.QSize(0, 40))
        self.classes_pushButton_add.setObjectName("classes_pushButton_add")
        self.horizontalLayout.addWidget(self.classes_pushButton_add)
        self.classes_pushButton_update = QtWidgets.QPushButton(parent=self.layoutWidget2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.classes_pushButton_update.sizePolicy().hasHeightForWidth())
        self.classes_pushButton_update.setSizePolicy(sizePolicy)
        self.classes_pushButton_update.setMinimumSize(QtCore.QSize(0, 40))
        self.classes_pushButton_update.setObjectName("classes_pushButton_update")
        self.horizontalLayout.addWidget(self.classes_pushButton_update)
        self.classes_pushButton_shadow = QtWidgets.QPushButton(parent=self.layoutWidget2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.classes_pushButton_shadow.sizePolicy().hasHeightForWidth())
        self.classes_pushButton_shadow.setSizePolicy(sizePolicy)
        self.classes_pushButton_shadow.setMinimumSize(QtCore.QSize(0, 40))
        self.classes_pushButton_shadow.setObjectName("classes_pushButton_shadow")
        self.horizontalLayout.addWidget(self.classes_pushButton_shadow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("icons/Учебные классы.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.tabWidget.addTab(self.tab_classes, icon2, "")
        self.tab_groups = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tab_groups.sizePolicy().hasHeightForWidth())
        self.tab_groups.setSizePolicy(sizePolicy)
        self.tab_groups.setObjectName("tab_groups")
        self.layoutWidget_3 = QtWidgets.QWidget(parent=self.tab_groups)
        self.layoutWidget_3.setGeometry(QtCore.QRect(10, 20, 581, 37))
        self.layoutWidget_3.setObjectName("layoutWidget_3")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.layoutWidget_3)
        self.horizontalLayout_8.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.groups_label_filter = QtWidgets.QLabel(parent=self.layoutWidget_3)
        self.groups_label_filter.setObjectName("groups_label_filter")
        self.horizontalLayout_8.addWidget(self.groups_label_filter)
        self.groups_comboBox_filter = QtWidgets.QComboBox(parent=self.layoutWidget_3)
        self.groups_comboBox_filter.setMinimumSize(QtCore.QSize(70, 0))
        self.groups_comboBox_filter.setObjectName("groups_comboBox_filter")
        self.groups_comboBox_filter.addItem("")
        self.groups_comboBox_filter.setItemText(0, "")
        self.groups_comboBox_filter.addItem("")
        self.horizontalLayout_8.addWidget(self.groups_comboBox_filter)
        self.groups_label_input = QtWidgets.QLabel(parent=self.layoutWidget_3)
        self.groups_label_input.setObjectName("groups_label_input")
        self.horizontalLayout_8.addWidget(self.groups_label_input)
        self.groups_lineEdit_input = QtWidgets.QLineEdit(parent=self.layoutWidget_3)
        self.groups_lineEdit_input.setObjectName("groups_lineEdit_input")
        self.horizontalLayout_8.addWidget(self.groups_lineEdit_input)
        self.groups_table = QtWidgets.QTableWidget(parent=self.tab_groups)
        self.groups_table.setGeometry(QtCore.QRect(10, 61, 581, 541))
        self.groups_table.setStyleSheet("table {\n"
"    width: 100%;           /* Задаем таблице ширину */\n"
"    table-layout: auto;    /* Автоматическая ширина столбцов по содержимому */\n"
"}\n"
"\n"
"th, td {\n"
"    padding: 5px;         /* Отступы для ячеек */\n"
"    border: 1px solid #ccc;  /* Границы ячеек */\n"
"}")
        self.groups_table.setObjectName("groups_table")
        self.groups_table.setColumnCount(2)
        self.groups_table.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.groups_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.groups_table.setHorizontalHeaderItem(1, item)
        self.layoutWidget3 = QtWidgets.QWidget(parent=self.tab_groups)
        self.layoutWidget3.setGeometry(QtCore.QRect(10, 610, 581, 42))
        self.layoutWidget3.setObjectName("layoutWidget3")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.layoutWidget3)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.groups_pushButton_add = QtWidgets.QPushButton(parent=self.layoutWidget3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groups_pushButton_add.sizePolicy().hasHeightForWidth())
        self.groups_pushButton_add.setSizePolicy(sizePolicy)
        self.groups_pushButton_add.setMinimumSize(QtCore.QSize(0, 40))
        self.groups_pushButton_add.setSizeIncrement(QtCore.QSize(0, 0))
        self.groups_pushButton_add.setObjectName("groups_pushButton_add")
        self.horizontalLayout_2.addWidget(self.groups_pushButton_add)
        self.groups_pushButton_update = QtWidgets.QPushButton(parent=self.layoutWidget3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groups_pushButton_update.sizePolicy().hasHeightForWidth())
        self.groups_pushButton_update.setSizePolicy(sizePolicy)
        self.groups_pushButton_update.setMinimumSize(QtCore.QSize(0, 40))
        self.groups_pushButton_update.setObjectName("groups_pushButton_update")
        self.horizontalLayout_2.addWidget(self.groups_pushButton_update)
        self.groups_pushButton_shadow = QtWidgets.QPushButton(parent=self.layoutWidget3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groups_pushButton_shadow.sizePolicy().hasHeightForWidth())
        self.groups_pushButton_shadow.setSizePolicy(sizePolicy)
        self.groups_pushButton_shadow.setMinimumSize(QtCore.QSize(0, 40))
        self.groups_pushButton_shadow.setObjectName("groups_pushButton_shadow")
        self.horizontalLayout_2.addWidget(self.groups_pushButton_shadow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("icons/Группы домашних заданий.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.tabWidget.addTab(self.tab_groups, icon3, "")
        self.tab_students = QtWidgets.QWidget()
        self.tab_students.setObjectName("tab_students")
        self.students_table = QtWidgets.QTableWidget(parent=self.tab_students)
        self.students_table.setGeometry(QtCore.QRect(-1, 59, 591, 541))
        self.students_table.setStyleSheet("")
        self.students_table.setObjectName("students_table")
        self.students_table.setColumnCount(4)
        self.students_table.setRowCount(7)
        item = QtWidgets.QTableWidgetItem()
        self.students_table.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.students_table.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.students_table.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.students_table.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.students_table.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.students_table.setVerticalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.students_table.setVerticalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.students_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.students_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.students_table.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.students_table.setHorizontalHeaderItem(3, item)
        self.layoutWidget_6 = QtWidgets.QWidget(parent=self.tab_students)
        self.layoutWidget_6.setGeometry(QtCore.QRect(10, 610, 581, 42))
        self.layoutWidget_6.setObjectName("layoutWidget_6")
        self.horizontalLayout_11 = QtWidgets.QHBoxLayout(self.layoutWidget_6)
        self.horizontalLayout_11.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_11.setObjectName("horizontalLayout_11")
        self.students_pushButton_add = QtWidgets.QPushButton(parent=self.layoutWidget_6)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.students_pushButton_add.sizePolicy().hasHeightForWidth())
        self.students_pushButton_add.setSizePolicy(sizePolicy)
        self.students_pushButton_add.setMinimumSize(QtCore.QSize(0, 40))
        self.students_pushButton_add.setObjectName("students_pushButton_add")
        self.horizontalLayout_11.addWidget(self.students_pushButton_add)
        self.students_pushButton_update = QtWidgets.QPushButton(parent=self.layoutWidget_6)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.students_pushButton_update.sizePolicy().hasHeightForWidth())
        self.students_pushButton_update.setSizePolicy(sizePolicy)
        self.students_pushButton_update.setMinimumSize(QtCore.QSize(0, 40))
        self.students_pushButton_update.setObjectName("students_pushButton_update")
        self.horizontalLayout_11.addWidget(self.students_pushButton_update)
        self.students_pushButton_shadow = QtWidgets.QPushButton(parent=self.layoutWidget_6)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.students_pushButton_shadow.sizePolicy().hasHeightForWidth())
        self.students_pushButton_shadow.setSizePolicy(sizePolicy)
        self.students_pushButton_shadow.setMinimumSize(QtCore.QSize(0, 40))
        self.students_pushButton_shadow.setObjectName("students_pushButton_shadow")
        self.horizontalLayout_11.addWidget(self.students_pushButton_shadow)
        self.students_label_input = QtWidgets.QLabel(parent=self.tab_students)
        self.students_label_input.setGeometry(QtCore.QRect(294, 10, 152, 35))
        self.students_label_input.setObjectName("students_label_input")
        self.students_lineEdit_input = QtWidgets.QLineEdit(parent=self.tab_students)
        self.students_lineEdit_input.setGeometry(QtCore.QRect(452, 10, 137, 35))
        self.students_lineEdit_input.setObjectName("students_lineEdit_input")
        self.students_comboBox_filter = QtWidgets.QComboBox(parent=self.tab_students)
        self.students_comboBox_filter.setGeometry(QtCore.QRect(150, 10, 138, 35))
        self.students_comboBox_filter.setMinimumSize(QtCore.QSize(70, 0))
        self.students_comboBox_filter.setObjectName("students_comboBox_filter")
        self.students_comboBox_filter.addItem("")
        self.students_comboBox_filter.setItemText(0, "")
        self.students_comboBox_filter.addItem("")
        self.students_comboBox_filter.addItem("")
        self.students_comboBox_filter.addItem("")
        self.students_label_filter = QtWidgets.QLabel(parent=self.tab_students)
        self.students_label_filter.setGeometry(QtCore.QRect(0, 10, 144, 35))
        self.students_label_filter.setObjectName("students_label_filter")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("icons/Ученики.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.tabWidget.addTab(self.tab_students, icon4, "")
        self.tab_basket = QtWidgets.QWidget()
        self.tab_basket.setObjectName("tab_basket")
        self.layoutWidget4 = QtWidgets.QWidget(parent=self.tab_basket)
        self.layoutWidget4.setGeometry(QtCore.QRect(50, 590, 521, 41))
        self.layoutWidget4.setObjectName("layoutWidget4")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.layoutWidget4)
        self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.basket_pushButton_recover = QtWidgets.QPushButton(parent=self.layoutWidget4)
        self.basket_pushButton_recover.setObjectName("basket_pushButton_recover")
        self.horizontalLayout_4.addWidget(self.basket_pushButton_recover)
        self.basket_pushButton_delete = QtWidgets.QPushButton(parent=self.layoutWidget4)
        self.basket_pushButton_delete.setObjectName("basket_pushButton_delete")
        self.horizontalLayout_4.addWidget(self.basket_pushButton_delete)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("icons/bin (2).png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.tabWidget.addTab(self.tab_basket, icon5, "")
        self.gridLayout.addWidget(self.tabWidget, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.statusbar.sizePolicy().hasHeightForWidth())
        self.statusbar.setSizePolicy(sizePolicy)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(5)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        item = self.teacher_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "№"))
        item = self.teacher_table.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Кол-во учеников"))
        item = self.teacher_table.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Группа"))
        item = self.teacher_table.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Опубликованных ДЗ"))
        item = self.teacher_table.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Оставшихся ДЗ"))
        __sortingEnabled = self.teacher_table.isSortingEnabled()
        self.teacher_table.setSortingEnabled(False)
        self.teacher_table.setSortingEnabled(__sortingEnabled)
        self.teacher_textEdit.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"hr { height: 1px; border-width: 0; }\n"
"li.unchecked::marker { content: \"\\2610\"; }\n"
"li.checked::marker { content: \"\\2612\"; }\n"
"</style></head><body style=\" font-family:\'Segoe UI\'; font-size:14px; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.teacher_label_notes.setText(_translate("MainWindow", "Заметки:"))
        self.teacher_label_percent.setText(_translate("MainWindow", "% учеников заливших последнее ДЗ  класса"))
        self.teacher_comboBox_classes.setItemText(0, _translate("MainWindow", "9"))
        self.teacher_comboBox_classes.setItemText(1, _translate("MainWindow", "10"))
        self.teacher_comboBox_classes.setItemText(2, _translate("MainWindow", "11"))
        self.teacher_label_notification.setText(_translate("MainWindow", "Уведомления: 2 домашки в черновиках"))
        self.teacher_label_name.setText(_translate("MainWindow", "Преподов Семён Семёныч"))
        self.teacher_label_headertable.setText(_translate("MainWindow", "Классы преподавателя:"))
        self.teacher_label_numgroups.setText(_translate("MainWindow", "Группы : 3"))
        self.teacher_label_numclasses.setText(_translate("MainWindow", "Классы : 3"))
        self.homework_label_filter.setText(_translate("MainWindow", "Фильтрация по:"))
        self.homework_comboBox_filter.setItemText(1, _translate("MainWindow", "№"))
        self.homework_comboBox_filter.setItemText(2, _translate("MainWindow", "Название"))
        self.homework_comboBox_filter.setItemText(3, _translate("MainWindow", "Группа ДЗ"))
        self.homework_comboBox_filter.setItemText(4, _translate("MainWindow", "Статус"))
        self.homework_label_input.setText(_translate("MainWindow", "Введите данные:"))
        item = self.homework_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "№"))
        item = self.homework_table.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Название"))
        item = self.homework_table.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Группа домашних работ"))
        item = self.homework_table.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Статус"))
        item = self.homework_table.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Методические рекомендации"))
        item = self.homework_table.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "Входные данные для контестера"))
        item = self.homework_table.horizontalHeaderItem(6)
        item.setText(_translate("MainWindow", "Выходные данные для контестера"))
        __sortingEnabled = self.homework_table.isSortingEnabled()
        self.homework_table.setSortingEnabled(False)
        self.homework_table.setSortingEnabled(__sortingEnabled)
        self.homework_pushButton_add.setText(_translate("MainWindow", "Добавить ДЗ"))
        self.homework_pushButton_update.setText(_translate("MainWindow", "Редактировать ДЗ"))
        self.homework_pushButton_shadow.setText(_translate("MainWindow", "Перевести в тень"))
        self.classes_label_filter.setText(_translate("MainWindow", "Фильтрация по:"))
        self.classes_comboBox_filter.setItemText(1, _translate("MainWindow", "№"))
        self.classes_comboBox_filter.setItemText(2, _translate("MainWindow", "Группа ДЗ"))
        self.classes_comboBox_filter.setItemText(3, _translate("MainWindow", "Список студентов"))
        self.classes_comboBox_filter.setItemText(4, _translate("MainWindow", "Классный руководитель"))
        self.classes_label_input.setText(_translate("MainWindow", "Введите данные:"))
        item = self.classes_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "№"))
        item = self.classes_table.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Группа ДЗ"))
        item = self.classes_table.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Список учеников"))
        item = self.classes_table.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Класнный руководитель"))
        __sortingEnabled = self.classes_table.isSortingEnabled()
        self.classes_table.setSortingEnabled(False)
        self.classes_table.setSortingEnabled(__sortingEnabled)
        self.classes_pushButton_add.setText(_translate("MainWindow", "Создать новый класс"))
        self.classes_pushButton_update.setText(_translate("MainWindow", "Редактировать класс"))
        self.classes_pushButton_shadow.setText(_translate("MainWindow", "Сделать теневым"))
        self.groups_label_filter.setText(_translate("MainWindow", "Фильтрация по:"))
        self.groups_comboBox_filter.setItemText(1, _translate("MainWindow", "Название группы"))
        self.groups_label_input.setText(_translate("MainWindow", "Введите данные:"))
        item = self.groups_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Название группы"))
        item = self.groups_table.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Примечание"))
        self.groups_pushButton_add.setText(_translate("MainWindow", "Добавить группу"))
        self.groups_pushButton_update.setText(_translate("MainWindow", "Редактировать группу"))
        self.groups_pushButton_shadow.setText(_translate("MainWindow", "Сделать группу теневой"))
        item = self.students_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "ФИО"))
        item = self.students_table.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Класс"))
        item = self.students_table.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Номер телефона"))
        item = self.students_table.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Ссылка на аккаунт в мессенджере"))
        self.students_pushButton_add.setText(_translate("MainWindow", "Добавить ученика"))
        self.students_pushButton_update.setText(_translate("MainWindow", "Редактировать"))
        self.students_pushButton_shadow.setText(_translate("MainWindow", "Перевести в тень"))
        self.students_label_input.setText(_translate("MainWindow", "Введите данные:"))
        self.students_comboBox_filter.setItemText(1, _translate("MainWindow", "ФИО"))
        self.students_comboBox_filter.setItemText(2, _translate("MainWindow", "Класс"))
        self.students_comboBox_filter.setItemText(3, _translate("MainWindow", "Номер телефона"))
        self.students_label_filter.setText(_translate("MainWindow", "Фильтрация по:"))
        self.basket_pushButton_recover.setText(_translate("MainWindow", "Восстановить"))
        self.basket_pushButton_delete.setText(_translate("MainWindow", "Удалить"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
